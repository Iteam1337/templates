apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  ports:
    - port: 4000
      targetPort: 4000
  selector:
    app: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: iteam1337/templates-backend # TODO: CHANGE ME!
          resources:
            requests:
              cpu: '0.3' # TODO: UPDATE ME WHEN YOU KNOW MORE
              memory: '512Mi' # TODO: UPDATE ME WHEN YOU KNOW MORE
            limits:
              memory: '2Gi'
          ports:
            - containerPort: 4000
      #     volumeMounts:
      #       - name: cache
      #         mountPath: /app/.cache

      # volumes:
      #   - name: cache
      #     hostPath:
      #       path: /storage/templates-backend/cache
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress # TODO: CHANGE ME!
  annotations:
    kubernetes.io/ingress.class: 'public'
    cert-manager.io/cluster-issuer: 'letsencrypt-prod'
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.org/websocket-services: 'backend' # TODO: CHANGE ME!
spec:
  tls:
    - hosts:
        - backend-stage.example.iteam.se # TODO: CHANGE ME!
      secretName: backend-stage-tls # TODO: CHANGE ME!
  # rules: # NEED Socket.io? Look below
  #   - host: backend-stage.example.iteam.se # TODO: CHANGE ME!
  #     http:
  #       paths:
  #         - path: /socket.io/.*
  #           pathType: Prefix
  #           backend:
  #             service:
  #               name: backend
  #               port:
  #                 number: 4000
