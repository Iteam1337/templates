apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  ports:
    - port: 27017
  type: LoadBalancer
  selector:
    app: mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongodb
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
          image: mongo:latest
          imagePullPolicy: Always
          name: mongodb
          args: ["--dbpath","/data/mongodb"]
          livenessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          env:
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              secretKeyRef:
                name: mongo-creds
                key: username
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongo-creds
                key: password
          volumeMounts:
          - name: "mongo-data-dir"
            mountPath: "/data/mongodb"
        volumes:
        - name: "mongo-data-dir"
          persistentVolumeClaim:
            claimName: "mongo-data"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mongodb-ingress
  annotations:
    kubernetes.io/ingress.class: "public"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - mongodb-stage.express-mongo-ts.iteam.se # TODO: CHANGE ME!
      secretName: express-mongo-ts-mongodb-prod-tls # TODO: CHANGE ME!
  rules:
    - host: mongodb-stage.express-mongo-ts.iteam.se # TODO: CHANGE ME!
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: mongodb
                port:
                  number: 27017
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-data-pv
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /data/mongodb